{"version":3,"sources":["Components/Footer.js","Services/FaceRecognitionApi.service.js","Components/Preview.js","Components/UploadForm.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","Component","FaceRecognitionApiService","APIKey","Object","classCallCheck","this","supported_attributes","faceIds","arguments","length","undefined","faceLandmarks","attributes","ret","faceAttributes","attribute","includes","console","log","imageData","ids","landmarks","to","formatAPIUrl","_MakeRequest","Url","url","datas","contentType","axios","post","headers","Ocp-Apim-Subscription-Key","Content-type","Preview","ctx","left","top","width","height","moveTo","lineTo","strokeStyle","stroke","eyeBottom","eyeInner","eyeOuter","eyeTop","point","beginPath","arc","x","y","Math","PI","point1","point2","refs","faceCanvas","getContext","clearRect","props","faceRect","createRect","eyeLeftBottom","createEye","eyeLeftInner","eyeLeftOuter","eyeLeftTop","eyeRightBottom","eyeRightInner","eyeRightOuter","eyeRightTop","eyebrowLeftInner","createLine","eyebrowLeftOuter","eyebrowRightInner","eyebrowRightOuter","mouthLeft","mouthRight","noseRootLeft","createNose","noseRootRight","noseLeftAlarOutTip","noseLeftAlarTop","noseRightAlarOutTip","noseRightAlarTop","noseTip","pupilLeft","createPoint","pupilRight","upperLipTop","createLip","upperLipBottom","underLipBottom","updateCanvas","newProps","forceUpdate","id","src","image","alt","ref","UploadForm","_this","possibleConstructorReturn","getPrototypeOf","call","faceRecog","state","inputValue","evt","setState","target","value","_this2","onload","response","data","faceRectangle","_this3","Image","updatePreview","GetFaceInformationFromUrl","then","handleResponse","catch","error","_this4","fileList","files","fileReader","FileReader","readAsArrayBuffer","result","GetFaceInformationFromImageData","imgUrlReader","file","readAsDataURL","_this5","onChange","updateInputValue","placeholder","type","onClick","uploadUrlImage","accept","capture","uploadImage","src_Components_Preview","App","className","Components_UploadForm","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9db6e69.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Footer extends Component { \n    render () { \n        return (\n        <footer>\n          Powered By Kirkiki and Noki !\n        </footer>\n        )\n    }\n}\n\nexport default Footer;","import axios from 'axios'\n\nclass FaceRecognitionApiService {\n\n    APIKey = \"\"\n\n    supported_attributes = [\n        'age', \n        'gender', \n        'headPose',\n        'smile',\n        'facialHair',\n        'glasses', \n        'emotion', \n        'hair',\n        'makeup',\n        'occlusion',\n        'accessories',\n        'blur',\n        'exposure',\n        'noise'\n    ]\n\n    constructor(APIKey) { \n        this.APIKey = APIKey\n    }\n\n    getSupportedAttributes() { \n        return this.supported_attributes;\n    }\n\n    formatAPIUrl(faceIds = true, faceLandmarks = false, attributes = []) {\n        // Get states values.\n        let ret = 'https://westeurope.api.cognitive.microsoft.com/face/v1.0/detect?returnFaceIds=' + faceIds + \"&returnFaceLandmarks=\" + faceLandmarks\n        let faceAttributes = \"\"\n        for (let attribute in attributes)\n        { \n            if (this.supported_attributes.includes(attribute)) {\n                if(! faceAttributes) { \n                    faceAttributes += ','\n                }\n                faceAttributes += attribute\n            }\n            else {\n                console.log(\"attribute :\", attribute, \"is not supported\")\n            }\n        }\n        if(faceAttributes) {\n            ret = ret + \"&returnFaceAttributes=\" + faceAttributes\n        }\n        return ret\n    }\n\n\n/*\n\n*/\n\n    GetFaceInformationFromImageData(imageData, ids= true, landmarks=true, attributes = this.supported_attributes) {\n        let to = this.formatAPIUrl(ids, landmarks, this.supported_attributes)\n        return this._MakeRequest(to, imageData, \"application/octet-stream\")\n    }\n\n    GetFaceInformationFromUrl(Url, ids= true, landmarks=true, attributes = this.supported_attributes) {\n        let to = this.formatAPIUrl(ids, landmarks, this.supported_attributes)\n        return this._MakeRequest(to, {url : Url}, \"application/json\")\n    }\n\n    _MakeRequest(to, datas, contentType) {\n        return axios.post(to,\n            datas,\n            {\n                headers: {\n                    \"Ocp-Apim-Subscription-Key\": this.APIKey,\n                    \"Content-type\": contentType\n                }\n            }\n        )\n    }\n}\n\nexport default FaceRecognitionApiService","import React, { Component } from 'react'\nimport './Preview.css'\n\nclass Preview extends Component {\n    // props image data.\n    // props facerect.\n\n\n    createRect(ctx, left, top, width, height) {\n        console.log(\"Create rect :\", left, top, width, height)\n        ctx.moveTo(left, top);\n        ctx.lineTo(left + width, top);\n        ctx.lineTo(left + width, top + height);\n        ctx.lineTo(left, top + height);\n        ctx.lineTo(left, top);\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.stroke();\n    }\n\n    createEye(ctx, eyeBottom, eyeInner, eyeOuter, eyeTop) {\n\n    }\n\n    createNose() {\n\n    }\n\n    createLip() {\n        \n    }\n\n    createPoint(ctx, point) {\n        ctx.beginPath();\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.arc(point.x, point.y, 1, 0, 2 * Math.PI, true);\n        ctx.stroke(); \n    }\n\n    createLine(ctx, point1, point2) {\n        console.log(\"Draw line \", point1, point2)\n        ctx.beginPath();\n        ctx.strokeStyle = \"#00FF00\";\n        ctx.moveTo(point1.x, point1.y)\n        ctx.lineTo(point2.x, point2.y)\n        ctx.stroke();\n    }\n\n    updateCanvas() {\n        console.log(\"Canvas update !\")\n        const ctx = this.refs.faceCanvas.getContext('2d');\n        // clear canvas\n        ctx.clearRect(0, 0, this.refs.faceCanvas.width, this.refs.faceCanvas.height);\n\n        // clear path\n        ctx.beginPath();\n\n        console.log(this.props.faceRect)\n        console.log(this.props.faceLandmarks)\n        if (this.props.faceRect) {\n            this.createRect(ctx, this.props.faceRect.left, this.props.faceRect.top, this.props.faceRect.width, this.props.faceRect.height)\n        }\n        //Eyes\n\n        if(this.props.faceLandmarks && this.props.faceLandmarks.eyeLeftBottom) {\n            this.createEye(ctx,\n                this.props.faceLandmarks.eyeLeftBottom,\n                this.props.faceLandmarks.eyeLeftInner,\n                this.props.faceLandmarks.eyeLeftOuter,\n                this.props.faceLandmarks.eyeLeftTop\n            )\n        }\n        if(this.props.faceLandmarks && this.props.faceLandmarks.eyeRightBottom) {\n            this.createEye(ctx,\n                this.props.faceLandmarks.eyeRightBottom,\n                this.props.faceLandmarks.eyeRightInner,\n                this.props.faceLandmarks.eyeRightOuter,\n                this.props.faceLandmarks.eyeRightTop\n            )\n        }\n// Eye brows\n        if(this.props.faceLandmarks && this.props.faceLandmarks.eyebrowLeftInner) {\n            this.createLine(ctx,\n                this.props.faceLandmarks.eyebrowLeftInner,\n                this.props.faceLandmarks.eyebrowLeftOuter\n            )\n        }\n        if(this.props.faceLandmarks && this.props.faceLandmarks.eyebrowRightInner) {\n            this.createLine(ctx,\n                this.props.faceLandmarks.eyebrowRightInner,\n                this.props.faceLandmarks.eyebrowRightOuter\n            )\n        }\n        // Mouth\n        if(this.props.faceLandmarks && this.props.faceLandmarks.mouthLeft) {\n            this.createLine(ctx,\n                this.props.faceLandmarks.mouthLeft,\n                this.props.faceLandmarks.mouthRight\n            )\n        }\n\n        if(this.props.faceLandmarks && this.props.faceLandmarks.noseRootLeft) {\n            this.createNose(\n                this.props.faceLandmarks.noseRootLeft,\n                this.props.faceLandmarks.noseRootRight,\n                this.props.faceLandmarks.noseLeftAlarOutTip,\n                this.props.faceLandmarks.noseLeftAlarTop,\n                this.props.faceLandmarks.noseRightAlarOutTip,\n                this.props.faceLandmarks.noseRightAlarTop,\n                this.props.faceLandmarks.noseTip,                \n            )\n        }\n\n        if(this.props.faceLandmarks && this.props.faceLandmarks.pupilLeft) {\n            this.createPoint(ctx,\n                this.props.faceLandmarks.pupilLeft\n            )\n        }\n\n        if(this.props.faceLandmarks && this.props.faceLandmarks.pupilRight) {\n            this.createPoint(ctx,\n                this.props.faceLandmarks.pupilRight\n            )\n        }\n\n        if(this.props.faceLandmarks && this.props.faceLandmarks.upperLipTop) {\n            this.createLip(\n                this.props.faceLandmarks.upperLipTop,\n                this.props.faceLandmarks.upperLipBottom,\n                this.props.faceLandmarks.underLipBottom,\n                this.props.faceLandmarks.underLipBottom\n            )\n        }\n\n\n    }\n\n    componentWillUpdate() {\n        console.log(\"Update !\")\n        this.updateCanvas()\n\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.props = newProps\n        console.log(\"New Props \", newProps)\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <div id=\"container\">\n                <img id='preview_img' src={this.props.image.url} alt=\"preview\" ></img>\n                <canvas id=\"faceCanvas\" ref=\"faceCanvas\" width={this.props.image.width} height={this.props.image.height}>\n\n                </canvas>\n\n            </div>\n        )\n    }\n}\n\nexport default Preview;","import React, { Component } from 'react'\n\nimport FaceRecognitionApiService from '../Services/FaceRecognitionApi.service'\nimport Preview from './Preview'\n\nclass UploadForm extends Component {\n\n    faceRecog\n\n    constructor(props) {\n        super(props);\n\n        this.faceRecog = new FaceRecognitionApiService(\"59367a363a2947208054fa85fc318ce9\")\n\n        this.state = {\n            inputValue: '',\n            imageData : {\n                width : 0,\n                height : 0,\n                url : \"\"\n            },\n            faceRect : {},\n            faceLandmarks : {}\n        };\n\n    }\n\n    updateInputValue(evt) {\n        this.setState({\n            inputValue: evt.target.value\n        });\n    }\n\n    updatePreview(image) {\n        image.onload = () => { \n            this.setState({\n                imageData : { \n                    width : image.width,\n                    height : image.height,\n                    url : image.src\n                }\n            })\n        }\n    }\n\n    handleResponse(response) {\n        this.setState({\n            faceRect : response.data[0].faceRectangle,\n            faceLandmarks : response.data[0].faceLandmarks,\n        })\n    }\n\n    uploadUrlImage() {\n        // TODO add url checks.\n        // \n        let image = new Image()\n        image.src = this.state.inputValue\n        this.updatePreview(image)\n        this.faceRecog.GetFaceInformationFromUrl(this.state.inputValue)\n        .then((response) => this.handleResponse(response))\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    uploadImage(evt) {\n        let fileList = evt.target.files;\n        let fileReader = new FileReader();\n        if (fileReader && fileList && fileList.length) {\n            fileReader.readAsArrayBuffer(fileList[0]);\n            fileReader.onload = () => {\n                // TODO update preview\n                let imageData = fileReader.result\n                this.faceRecog.GetFaceInformationFromImageData(imageData)\n                .then((response) => this.handleResponse(response))\n                .catch(function (error) {\n                    console.log(error);\n                });\n            };\n\n            let imgUrlReader = new FileReader();\n            \n            imgUrlReader.onload = (file) =>\n            {\n                let image = new Image()\n                image.src = file.target.result\n                this.updatePreview(image)\n            }\n\n            imgUrlReader.readAsDataURL(fileList[0]);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <div>\n                        <label>Upload through Link</label>\n                        <div>\n                            <input id=\"urlImput\" value={this.state.inputValue} onChange={evt => this.updateInputValue(evt)} placeholder=\"http://your_link/to/an/image.ext\" />\n                        </div>\n                        <div>\n                            <button type=\"button\" onClick={evt => this.uploadUrlImage()}>Submit</button>\n                        </div>\n                    </div>\n                    OR\n                    <div>\n                        <label>Take a picture of your face</label>\n                        <div>\n                            <input type=\"file\" id=\"mypic\" accept=\"image/*\" capture=\"camera\" onChange={evt => this.uploadImage(evt)} />\n                        </div>\n                    </div>\n                </div>\n                <Preview faceLandmarks={this.state.faceLandmarks} faceRect={this.state.faceRect} image={this.state.imageData}></Preview>\n            </div>\n        )\n    }\n\n}\n\nexport default UploadForm","import React, { Component } from 'react';\nimport './App.css';\nimport Footer from './Components/Footer'\nimport UploadForm from './Components/UploadForm';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          An Awesome RGPD Compliant tool, we promise we don't keeps your personal data !\n          <UploadForm></UploadForm>\n        </header>\n\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}